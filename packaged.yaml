AWSTemplateFormatVersion: '2010-09-09'
Description: 'Step function hello world with SAM!

  '
Globals:
  Function:
    Runtime: nodejs8.10
Parameters:
  Stage:
    Default: Dev
    Description: Stage or environment designator used to discriminate the resources
      instantiated for a specific stack
    Type: String
Resources:
  LambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
    Type: AWS::IAM::Role
  Process1:
    Properties:
      DefinitionString:
        Fn::Sub: "{\n  \"Comment\":\"Sample state machine to show case data vs flow\
          \ data\",\n  \"StartAt\":\"step-1\",\n  \"States\": {\n    \"step-1\": {\n\
          \      \"Type\":\"Task\",\n      \"Resource\":\"${Step1.Arn}\",\n      \"\
          Next\":\"choiceStep\"\n    },\n    \"choiceStep\": {\n      \"Type\":\"\
          Choice\",\n      \"Choices\":[\n        {\n          \"Variable\":\"$.metavar\"\
          ,\n          \"StringEquals\": \"foo\",\n          \"Next\":\"fooStep\"\n\
          \        },\n        {\n          \"Variable\":\"$.metavar\",\n        \
          \  \"StringEquals\": \"bar\",\n          \"Next\":\"barStep\"\n        }\n\
          \      ],\n      \"Default\":\"bazStep\"\n    },\n    \"fooStep\": {\n \
          \     \"Type\":\"Task\",\n      \"Resource\":\"${fooStep.Arn}\",\n     \
          \ \"Next\":\"quux\"\n    },\n    \"barStep\": {\n      \"Type\":\"Task\"\
          ,\n      \"Resource\":\"${barStep.Arn}\",\n      \"Next\":\"quux\"\n   \
          \ },\n    \"bazStep\": {\n      \"Type\":\"Task\",\n      \"Resource\":\"\
          ${bazStep.Arn}\",\n      \"Next\":\"quux\"\n    },\n    \"quux\": {\n  \
          \    \"Type\":\"Task\",\n      \"Resource\":\"${quuxStep.Arn}\",\n     \
          \ \"End\":true\n    }\n  }\n}\n"
      RoleArn:
        Fn::GetAtt:
        - StatesExecutionRole
        - Arn
      StateMachineName:
        Fn::Join:
        - '-'
        - - DDBCaseSample
          - Ref: Stage
    Type: AWS::StepFunctions::StateMachine
  StatesExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - lambda:InvokeFunction
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: StatesExecutionPolicy
    Type: AWS::IAM::Role
  Step1:
    Properties:
      CodeUri: s3://sampack-97068/53c53c9a85c95ae536a3cadf0863c1ee
      Handler: process.step1
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  barStep:
    Properties:
      CodeUri: s3://sampack-97068/53c53c9a85c95ae536a3cadf0863c1ee
      Handler: process.barStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  bazStep:
    Properties:
      CodeUri: s3://sampack-97068/53c53c9a85c95ae536a3cadf0863c1ee
      Handler: process.bazStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  fooStep:
    Properties:
      CodeUri: s3://sampack-97068/53c53c9a85c95ae536a3cadf0863c1ee
      Handler: process.fooStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  quuxStep:
    Properties:
      CodeUri: s3://sampack-97068/53c53c9a85c95ae536a3cadf0863c1ee
      Handler: process.quuxStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
