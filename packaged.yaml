AWSTemplateFormatVersion: '2010-09-09'
Description: 'Step function hello world with SAM!

  '
Globals:
  Function:
    Environment:
      Variables:
        DYNAMODB_TABLE:
          Fn::Join:
          - '-'
          - - DDBCaseSample
            - Ref: Stage
    Runtime: nodejs8.10
Parameters:
  Stage:
    Default: Dev
    Description: Stage or environment designator used to discriminate the resources
      instantiated for a specific stack
    Type: String
Resources:
  DDBState:
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
      - AttributeName: TxnId
        AttributeType: S
      KeySchema:
      - AttributeName: TxnId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName:
        Fn::Join:
        - '-'
        - - DDBCaseSample
          - Ref: Stage
    Type: AWS::DynamoDB::Table
  LambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - DDBState
              - Arn
          Version: '2012-10-17'
        PolicyName: AccessDDB
    Type: AWS::IAM::Role
  Process1:
    Properties:
      DefinitionString:
        Fn::Sub: "{\n  \"Comment\":\"Sample state machine to show case data vs flow\
          \ data\",\n  \"StartAt\":\"step-1\",\n  \"States\": {\n    \"step-1\": {\n\
          \      \"Type\":\"Task\",\n      \"Resource\":\"${Step1.Arn}\",\n      \"\
          Next\":\"choiceStep\"\n    },\n    \"choiceStep\": {\n      \"Type\":\"\
          Choice\",\n      \"Choices\":[\n        {\n          \"Variable\":\"$.metavar\"\
          ,\n          \"StringEquals\": \"foo\",\n          \"Next\":\"fooStep\"\n\
          \        },\n        {\n          \"Variable\":\"$.metavar\",\n        \
          \  \"StringEquals\": \"bar\",\n          \"Next\":\"barStep\"\n        }\n\
          \      ],\n      \"Default\":\"bazStep\"\n    },\n    \"fooStep\": {\n \
          \     \"Type\":\"Task\",\n      \"Resource\":\"${fooStep.Arn}\",\n     \
          \ \"Next\":\"quux\"\n    },\n    \"barStep\": {\n      \"Type\":\"Task\"\
          ,\n      \"Resource\":\"${barStep.Arn}\",\n      \"Next\":\"quux\"\n   \
          \ },\n    \"bazStep\": {\n      \"Type\":\"Task\",\n      \"Resource\":\"\
          ${bazStep.Arn}\",\n      \"Next\":\"quux\"\n    },\n    \"quux\": {\n  \
          \    \"Type\":\"Task\",\n      \"Resource\":\"${quuxStep.Arn}\",\n     \
          \ \"End\":true\n    }\n  }\n}\n"
      RoleArn:
        Fn::GetAtt:
        - StatesExecutionRole
        - Arn
      StateMachineName:
        Fn::Join:
        - '-'
        - - DDBCaseSample
          - Ref: Stage
    Type: AWS::StepFunctions::StateMachine
  Start:
    Properties:
      CodeUri: s3://sampack-97068/48f4c477ab3b1cc654c26aea072c8e66
      Environment:
        Variables:
          STEP_FUNCTION_ARN:
            Ref: Process1
      Events:
        StartEvent:
          Properties:
            Method: post
            Path: /start
          Type: Api
      FunctionName:
        Fn::Join:
        - '-'
        - - StartDDBCaseSample
          - Ref: Stage
      Handler: start.start
      Role:
        Fn::GetAtt:
        - StartExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  StartExecutionRole:
    DependsOn:
    - Process1
    - DDBState
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - states:StartExecution
            Effect: Allow
            Resource:
            - Ref: Process1
          Version: '2012-10-17'
        PolicyName: CreateExecution
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:PutItem
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - DDBState
              - Arn
          Version: '2012-10-17'
        PolicyName: AccessDDB
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:CreateLogGroup
            Effect: Allow
            Resource:
            - arn:aws:logs:*:*:*
          Version: '2012-10-17'
        PolicyName: AllKidsLoveLog
    Type: AWS::IAM::Role
  StatesExecutionRole:
    DependsOn:
    - Step1
    - fooStep
    - barStep
    - bazStep
    - quuxStep
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - lambda:InvokeFunction
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - Step1
              - Arn
            - Fn::GetAtt:
              - fooStep
              - Arn
            - Fn::GetAtt:
              - barStep
              - Arn
            - Fn::GetAtt:
              - bazStep
              - Arn
            - Fn::GetAtt:
              - quuxStep
              - Arn
          Version: '2012-10-17'
        PolicyName: StatesExecutionPolicy
    Type: AWS::IAM::Role
  Step1:
    Properties:
      CodeUri: s3://sampack-97068/48f4c477ab3b1cc654c26aea072c8e66
      Handler: process.step1
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  barStep:
    Properties:
      CodeUri: s3://sampack-97068/48f4c477ab3b1cc654c26aea072c8e66
      Handler: process.barStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  bazStep:
    Properties:
      CodeUri: s3://sampack-97068/48f4c477ab3b1cc654c26aea072c8e66
      Handler: process.bazStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  fooStep:
    Properties:
      CodeUri: s3://sampack-97068/48f4c477ab3b1cc654c26aea072c8e66
      Handler: process.fooStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
  quuxStep:
    Properties:
      CodeUri: s3://sampack-97068/48f4c477ab3b1cc654c26aea072c8e66
      Handler: process.quuxStep
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
